# templates/postgresql.yaml
{{- if and (not .Values.sonarqube.database.external) .Values.sonarqube.database.postgresql.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-postgresql
  namespace: {{ .Values.sonarqube.namespace }}
  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: postgresql
        release: {{ .Release.Name }}
    spec:
      containers:
      - name: postgresql
        image: "{{ .Values.sonarqube.database.postgresql.image.repository }}:{{ .Values.sonarqube.database.postgresql.image.tag }}"
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: {{ .Values.sonarqube.database.postgresql.database }}
        - name: POSTGRES_USER
          value: {{ .Values.sonarqube.database.postgresql.username }}
        - name: POSTGRES_PASSWORD
          value: {{ .Values.sonarqube.database.postgresql.password }}
        volumeMounts:
        - name: postgresql-data
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      volumes:
      - name: postgresql-data
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-postgresql-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-postgresql
  namespace: {{ .Values.sonarqube.namespace }}
  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  selector:
    app: postgresql
    release: {{ .Release.Name }}
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-postgresql-pvc
  namespace: {{ .Values.sonarqube.namespace }}
  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: {{ .Values.sonarqube.persistence.storageClass }}
  resources:
    requests:
      storage: {{ .Values.sonarqube.database.postgresql.storage }}
{{- end }}
